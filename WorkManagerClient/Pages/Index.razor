@page "/"
@using System.ComponentModel.DataAnnotations
@using WorkManagerClient.Models
@using Microsoft.Extensions.Logging
@using Data;
@using Enums;
@inject HttpClient Http
@inject ILogger<Index> Logger
@inject NavigationManager Navigation

<h2>Autó javítás felvétele</h2>

<EditForm Model=@workflow OnValidSubmit="@HandleValidSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <p>
        <label>
            Vezetéknév:
            <InputText id="name" @bind-Value="workflow.ClientFirstName" />
        </label>
    </p>

    <p>
        <label>
            Keresztnév:
            <InputText id="name" @bind-Value="workflow.ClientLastName" />
        </label>
    </p>

    <p>
        <label>
            Autó típusa:
            <InputText id="name" @bind-Value="workflow.CarType" />
        </label>
    </p>

    <p>
        <label>
            Rendszám:
            <InputText id="name" @bind-Value="workflow.LicencePlateNumber" />
        </label>
    </p>

    <p>
        <label>
            Gyártási év:
            <InputNumber id="name" @bind-Value="workflow.ManufactureYear" />
        </label>
    </p>

    <p>
        <label>
            Munka kategória:
            <InputSelect id="name" @bind-Value="workflow.WorkCatagory">
                @foreach (var workcatergory in Enum.GetValues(typeof(WorkCatagory)))
                {
                    <option value="@workcatergory">@workcatergory</option>
                }
            </InputSelect>
        </label>
    </p>

    <p>
        <label>
            Az autó hibájának rövid leírása:
            <InputText id="name" @bind-Value="workflow.Description" />
        </label>
    </p>

    <p>
        <label>
            A hiba súlyossága (1-10):
            <InputNumber id="name" @bind-Value="workflow.IssueSeriousness" />
        </label>
    </p>

    <input type="hidden" @bind-value="workflow.Active" />
    <input type="hidden" @bind-value="workflow.WorkStatus" />

    <button type="submit">Submit</button>
</EditForm>

@code {
    private Workflow workflow = new();
    public EditContext? editContext;

    protected override void OnInitialized()
    {
        editContext = new(workflow);
    }

    private async void HandleValidSubmit()
    {
        var response = await Http.PostAsJsonAsync(GlobalStaticVariables.apiurl + "/Insert", workflow);

        if (response.StatusCode == System.Net.HttpStatusCode.OK)
        {
            Navigation.NavigateTo("worktable");
        }
        else
        {
            Logger.LogInformation("Invalid submit");
        }
    }

    /*
    public async void OnEditRowAsync(int id){
        var response = await Http.GetFromJsonAsync<Workflow>(GlobalStaticVariables.apiurl + string.Format("/GetWorkflow/{0}", id));
        workflow = response;
    }
    */
}
