@page "/{Id:int?}"
@using System.ComponentModel.DataAnnotations
@using WorkManagerClient.Models
@using Microsoft.Extensions.Logging
@using Data;
@using Enums;
@using Managers;
@inject HttpClient Http
@inject ILogger<Index> Logger
@inject NavigationManager Navigation

<h2>Autó javítás felvétele</h2>

<hr/>

<div class="col-md-3 form-group col-lg-4" style="min-width: 30rem;">
    <EditForm Model=@workflow OnValidSubmit="@HandleValidSubmit">
        <DataAnnotationsValidator />
        <ValidationSummary />

        <div class="form-group" style="display: grid; gap: 1rem;
                grid-template-columns: repeat(2, minmax(0, 1fr));">
            <label>
                Vezetéknév:
            </label>
            <InputText class="form-control" id="name" @bind-Value="workflow.ClientFirstName" />


            <label>
                Keresztnév:
            </label>
            <InputText class="form-control" id="name" @bind-Value="workflow.ClientLastName" />


            <label>
                Autó típusa:
            </label>
            <InputText class="form-control" id="name" @bind-Value="workflow.CarType" />


            <label>
                Rendszám:
            </label>
            <InputText class="form-control" id="name" @bind-Value="workflow.LicencePlateNumber" />

            <label>
                Gyártási év:
            </label>
            <InputNumber class="form-control" id="name" @bind-Value="workflow.ManufactureYear" />


            <label>
                Munka kategória:

            </label>
            <InputSelect class="form-control"  id="name" @bind-Value="workflow.WorkCatagory">
                @foreach (var workcatergory in Enum.GetValues(typeof(WorkCatagory)))
                {
                    <option value="@workcatergory">@(((WorkCatagory)Enum.Parse(typeof(WorkCatagory), workcatergory.ToString())).GetDescription())</option>
                }
            </InputSelect>

            <label>
                Az autó hibájának rövid leírása:

            </label>
            <InputText class="form-control"  id="name" @bind-Value="workflow.Description" />
             <label>
                A hiba súlyossága (1-10):
            </label>
            <InputNumber class="form-control" id="name" @bind-Value="workflow.IssueSeriousness" />
        </div>


        <input type="hidden" @bind-value="workflow.Active" />
        <input type="hidden" @bind-value="workflow.WorkStatus" />

        <button type="submit" class="btn btn-primary float-end mt-2">Felvétel</button>
    </EditForm>
</div>


@code {
    private Workflow workflow = new();
    [Parameter]
    public int Id { get; set; }

    protected async override Task OnInitializedAsync()
    {
        if (Id != 0)
            workflow = await Http.GetFromJsonAsync<Workflow>(GlobalStaticVariables.apiurl + "/GetWorkflow/" + Id);
    }

    private async void HandleValidSubmit()
    {

        if (Id != 0)
        {
            var response = await Http.PutAsJsonAsync(GlobalStaticVariables.apiurl + "/Update", workflow);
            if (response.StatusCode == System.Net.HttpStatusCode.OK)
            {
                Navigation.NavigateTo("worktable");
            }
        }
        else
        {
            var response = await Http.PostAsJsonAsync(GlobalStaticVariables.apiurl + "/Insert", workflow);
            if (response.StatusCode == System.Net.HttpStatusCode.OK)
            {
                Navigation.NavigateTo("worktable");
            }
            else
            {
                Logger.LogInformation("Invalid submit");
            }
        }
    }
}
